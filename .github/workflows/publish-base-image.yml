name: "Docker CI (branch:main)"

env:
  repository: base-image
  namespace: code-server-boilerplates
  namespace_dockerhub: codeserverboilerplates

on:
  push:
    paths:
      - "Dockerfile"
      - ".trigger-rebuild"
      - ".dockerignore"
      - "overlay/**"
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_push:
        description: Leave it blank to only run test build, otherwise set to true.
        required: false

jobs:
  image-linter:
     name: Test and analyize image build
     runs-on: "ubuntu-latest"
     steps:
       - name: "Create checkmates"
         uses: "actions/checkout@v2"

       - name: Install Dive
         run: |
           wget https://github.com/wagoodman/dive/releases/download/v0.10.0/dive_0.10.0_linux_amd64.deb -O /tmp/dive_linux_amd64.deb
           sudo apt install /tmp/dive_linux_amd64.deb

       - name: Build and check for wasted space
         env:
           DOCKER_BUILDKIT: 1
         run: |
            set -eux
            docker build --tag registry.repohub.dev/${{env.namespace}}/${{env.repository}} .
            CI=true dive registry.repohub.dev/${{env.namespace}}/${{env.repository}}

  build-from-main:
     name: Publish as canary
     needs: [ image-linter ]
     runs-on: "ubuntu-latest"
     if: ${{ github.ref == 'refs/heads/main'}}
     steps:
       - name: "Create checkmates"
         uses: "actions/checkout@v2"
       - name: Generate metadata for Docker builds
         id: meta
         uses: docker/metadata-action@v3
         with:
           images: |
             quay.io/${{ env.namespace }}/${{ env.repository }}
             ghcr.io/${{ env.namespace }}/${{ env.repository }}
           tags: |
             type=sha,format=short
           flavor: |
             latest=true

       # Setup QEMU for multiarch builds
       - name: Set up QEMU
         uses: docker/setup-qemu-action@v1
       # and of course, we need to setup Buildx
       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v1
         with:
           driver-opts: "image=moby/buildkit:master,network=host"
       - name: Login to GitHub Container Registry
         uses: docker/login-action@v1
         with:
           registry: ghcr.io
           username: ${{ secrets.GHCR_SERVICE_ACCOUNT_USERNAME }}
           password: ${{ secrets.GHCR_SERVICE_ACCOUNT_PASSWORD }}
       - name: Login to Red Hat Quay Container Registry
         uses: docker/login-action@v1
         with:
           registry: quay.io
           username: ${{ secrets.RHQCR_SERVICE_ACCOUNT_USERNAME }}
           password: ${{ secrets.RHQCR_SERVICE_ACCOUNT_PASSWORD }}
       - name: Build and push to GHCR + DockerHub and RHQC
         id: image-build
         uses: docker/build-push-action@v2
         with:
           push: true
           tags: ${{ steps.meta.outputs.tags }}
           labels: ${{ steps.meta.outputs.labels }}
           context: .
           # arm64 can sometimes experience weird GnuTLS errors
           platforms: linux/amd64